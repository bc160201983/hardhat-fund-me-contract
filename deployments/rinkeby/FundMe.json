{
  "address": "0x918b30d9a83c2a400e2dd204a2184d6ba9eaacbf",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xdb4cb4d0e547f7a5ce741a17f57f04760ed2524985b2a2a379025c527a4a05b2",
  "receipt": {
    "to": null,
    "from": "0x325a2153533243595f90c6060957df5f874b9329",
    "contractAddress": "0x918b30d9a83c2a400e2dd204a2184d6ba9eaacbf",
    "transactionIndex": "0x4",
    "gasUsed": "0xe6f2e",
    "logsBloom": "0x
    "blockHash": "0xf57471da97c9ac60830adc1a013d7803273f9fdafd3f08c5275eeff6263cff68",
    "transactionHash": "0xdb4cb4d0e547f7a5ce741a17f57f04760ed2524985b2a2a379025c527a4a05b2",
    "logs": [],
    "blockNumber": "0xa661ba",
    "cumulativeGasUsed": "0x81515c",
    "status": "0x1"
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "7d68a93dea2399ada7b645f3c085fadc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public minUsd = 50 * 1e18;\\n\\n    address[] public funders;\\n    address public owner;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        // set minimum send amount\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= minUsd,\\n            \\\"Did't send enough\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 _index = 0; _index < funders.length; _index++) {\\n            address funder = funders[_index];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Sender in not Owner\\\");\\n        // if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x19baa15ccfa55c058019459910c32875db4cf90135d1931980a7a3126a3d509d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeedAddress)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 price, , , ) = priceFeedAddress.latestRoundData();\\r\\n\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 _ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * _ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x94b17f45a5d3e807cb815cdced950f5804a6615800c91c1a68199ef489a34722\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526802b5e3af16b188000060005534801561001d57600080fd5b5060405162001055380380620010558339818101604052810190610041919061012c565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610159565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f9826100ce565b9050919050565b610109816100ee565b811461011457600080fd5b50565b60008151905061012681610100565b92915050565b600060208284031215610142576101416100c9565b5b600061015084828501610117565b91505092915050565b610eec80620001696000396000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a457806351b80e41146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102dd565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107b8565b610529565b6040516100d891906107fe565b60405180910390f35b3480156100ed57600080fd5b506100f6610541565b60405161010391906107fe565b60405180910390f35b34801561011857600080fd5b50610121610547565b60405161012e9190610878565b60405180910390f35b34801561014357600080fd5b5061014c61056d565b60405161015991906108a2565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108e9565b610593565b6040516101a091906108a2565b60405180910390f35b6000546101e1600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d290919063ffffffff16565b1015610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610973565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d491906109c2565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036490610a64565b60405180910390fd5b60005b6001805490508110156104195760006001828154811061039357610392610a84565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041190610ab3565b915050610370565b50600067ffffffffffffffff81111561043557610434610afc565b5b6040519080825280602002602001820160405280156104635781602001602082028036833780820191505090505b50600190805190602001906104799291906106ae565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a090610b5c565b60006040518083038185875af1925050503d80600081146104dd576040519150601f19603f3d011682016040523d82523d6000602084013e6104e2565b606091505b5050905080610526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051d90610bbd565b60405180910390fd5b50565b60036020528060005260406000206000915090505481565b60005481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105a357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105de8361060e565b90506000670de0b6b3a764000085836105f79190610bdd565b6106019190610c66565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065757600080fd5b505afa15801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190610d24565b5050509150506402540be400816106a69190610d9f565b915050919050565b828054828255906000526020600020908101928215610727579160200282015b828111156107265782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ce565b5b5090506107349190610738565b5090565b5b80821115610751576000816000905550600101610739565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107858261075a565b9050919050565b6107958161077a565b81146107a057600080fd5b50565b6000813590506107b28161078c565b92915050565b6000602082840312156107ce576107cd610755565b5b60006107dc848285016107a3565b91505092915050565b6000819050919050565b6107f8816107e5565b82525050565b600060208201905061081360008301846107ef565b92915050565b6000819050919050565b600061083e6108396108348461075a565b610819565b61075a565b9050919050565b600061085082610823565b9050919050565b600061086282610845565b9050919050565b61087281610857565b82525050565b600060208201905061088d6000830184610869565b92915050565b61089c8161077a565b82525050565b60006020820190506108b76000830184610893565b92915050565b6108c6816107e5565b81146108d157600080fd5b50565b6000813590506108e3816108bd565b92915050565b6000602082840312156108ff576108fe610755565b5b600061090d848285016108d4565b91505092915050565b600082825260208201905092915050565b7f44696427742073656e6420656e6f756768000000000000000000000000000000600082015250565b600061095d601183610916565b915061096882610927565b602082019050919050565b6000602082019050818103600083015261098c81610950565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109cd826107e5565b91506109d8836107e5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a0d57610a0c610993565b5b828201905092915050565b7f53656e64657220696e206e6f74204f776e657200000000000000000000000000600082015250565b6000610a4e601383610916565b9150610a5982610a18565b602082019050919050565b60006020820190508181036000830152610a7d81610a41565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610abe826107e5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610af157610af0610993565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b46600083610b2b565b9150610b5182610b36565b600082019050919050565b6000610b6782610b39565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ba7600b83610916565b9150610bb282610b71565b602082019050919050565b60006020820190508181036000830152610bd681610b9a565b9050919050565b6000610be8826107e5565b9150610bf3836107e5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c2c57610c2b610993565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c71826107e5565b9150610c7c836107e5565b925082610c8c57610c8b610c37565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cb681610c97565b8114610cc157600080fd5b50565b600081519050610cd381610cad565b92915050565b6000819050919050565b610cec81610cd9565b8114610cf757600080fd5b50565b600081519050610d0981610ce3565b92915050565b600081519050610d1e816108bd565b92915050565b600080600080600060a08688031215610d4057610d3f610755565b5b6000610d4e88828901610cc4565b9550506020610d5f88828901610cfa565b9450506040610d7088828901610d0f565b9350506060610d8188828901610d0f565b9250506080610d9288828901610cc4565b9150509295509295909350565b6000610daa82610cd9565b9150610db583610cd9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610df457610df3610993565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e3157610e30610993565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e6e57610e6d610993565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610eab57610eaa610993565b5b82820290509291505056fea2646970667358221220a29135ad3fcb6ae41e2c32aeab4e161b9467d3c9c0fc308bcd1991dae5b9d88e64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a457806351b80e41146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102dd565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107b8565b610529565b6040516100d891906107fe565b60405180910390f35b3480156100ed57600080fd5b506100f6610541565b60405161010391906107fe565b60405180910390f35b34801561011857600080fd5b50610121610547565b60405161012e9190610878565b60405180910390f35b34801561014357600080fd5b5061014c61056d565b60405161015991906108a2565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108e9565b610593565b6040516101a091906108a2565b60405180910390f35b6000546101e1600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d290919063ffffffff16565b1015610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610973565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d491906109c2565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036490610a64565b60405180910390fd5b60005b6001805490508110156104195760006001828154811061039357610392610a84565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041190610ab3565b915050610370565b50600067ffffffffffffffff81111561043557610434610afc565b5b6040519080825280602002602001820160405280156104635781602001602082028036833780820191505090505b50600190805190602001906104799291906106ae565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a090610b5c565b60006040518083038185875af1925050503d80600081146104dd576040519150601f19603f3d011682016040523d82523d6000602084013e6104e2565b606091505b5050905080610526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051d90610bbd565b60405180910390fd5b50565b60036020528060005260406000206000915090505481565b60005481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105a357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105de8361060e565b90506000670de0b6b3a764000085836105f79190610bdd565b6106019190610c66565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065757600080fd5b505afa15801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190610d24565b5050509150506402540be400816106a69190610d9f565b915050919050565b828054828255906000526020600020908101928215610727579160200282015b828111156107265782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ce565b5b5090506107349190610738565b5090565b5b80821115610751576000816000905550600101610739565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107858261075a565b9050919050565b6107958161077a565b81146107a057600080fd5b50565b6000813590506107b28161078c565b92915050565b6000602082840312156107ce576107cd610755565b5b60006107dc848285016107a3565b91505092915050565b6000819050919050565b6107f8816107e5565b82525050565b600060208201905061081360008301846107ef565b92915050565b6000819050919050565b600061083e6108396108348461075a565b610819565b61075a565b9050919050565b600061085082610823565b9050919050565b600061086282610845565b9050919050565b61087281610857565b82525050565b600060208201905061088d6000830184610869565b92915050565b61089c8161077a565b82525050565b60006020820190506108b76000830184610893565b92915050565b6108c6816107e5565b81146108d157600080fd5b50565b6000813590506108e3816108bd565b92915050565b6000602082840312156108ff576108fe610755565b5b600061090d848285016108d4565b91505092915050565b600082825260208201905092915050565b7f44696427742073656e6420656e6f756768000000000000000000000000000000600082015250565b600061095d601183610916565b915061096882610927565b602082019050919050565b6000602082019050818103600083015261098c81610950565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109cd826107e5565b91506109d8836107e5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a0d57610a0c610993565b5b828201905092915050565b7f53656e64657220696e206e6f74204f776e657200000000000000000000000000600082015250565b6000610a4e601383610916565b9150610a5982610a18565b602082019050919050565b60006020820190508181036000830152610a7d81610a41565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610abe826107e5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610af157610af0610993565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b46600083610b2b565b9150610b5182610b36565b600082019050919050565b6000610b6782610b39565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ba7600b83610916565b9150610bb282610b71565b602082019050919050565b60006020820190508181036000830152610bd681610b9a565b9050919050565b6000610be8826107e5565b9150610bf3836107e5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c2c57610c2b610993565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c71826107e5565b9150610c7c836107e5565b925082610c8c57610c8b610c37565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cb681610c97565b8114610cc157600080fd5b50565b600081519050610cd381610cad565b92915050565b6000819050919050565b610cec81610cd9565b8114610cf757600080fd5b50565b600081519050610d0981610ce3565b92915050565b600081519050610d1e816108bd565b92915050565b600080600080600060a08688031215610d4057610d3f610755565b5b6000610d4e88828901610cc4565b9550506020610d5f88828901610cfa565b9450506040610d7088828901610d0f565b9350506060610d8188828901610d0f565b9250506080610d9288828901610cc4565b9150509295509295909350565b6000610daa82610cd9565b9150610db583610cd9565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610df457610df3610993565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e3157610e30610993565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e6e57610e6d610993565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610eab57610eaa610993565b5b82820290509291505056fea2646970667358221220a29135ad3fcb6ae41e2c32aeab4e161b9467d3c9c0fc308bcd1991dae5b9d88e64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "minUsd",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}